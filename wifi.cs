///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SSPC_iOS
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The wifi recording.
    /// </summary>
    [TestModule("3f2192f7-6783-4d11-8d01-40269cb2cf52", ModuleType.Recording, 1)]
    public partial class wifi : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SSPC_Android_BVTRepository repository.
        /// </summary>
        public static SSPC_Android_BVTRepository repo = SSPC_Android_BVTRepository.Instance;

        static wifi instance = new wifi();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public wifi()
        {
            WifiPassword = "osys9456";
            Wifissid = "Galaxy S20+f314";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static wifi Instance
        {
            get { return instance; }
        }

#region Variables

        string _WifiPassword;

        /// <summary>
        /// Gets or sets the value of variable WifiPassword.
        /// </summary>
        [TestVariable("697cce41-86c9-4085-8e60-6eeca638716e")]
        public string WifiPassword
        {
            get { return _WifiPassword; }
            set { _WifiPassword = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Nickname.
        /// </summary>
        [TestVariable("15db34cc-b901-4dc4-b385-f561e02f4c65")]
        public string Nickname
        {
            get { return repo.Nickname; }
            set { repo.Nickname = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DeviceID.
        /// </summary>
        [TestVariable("84902cad-a599-4713-a3d3-2ea660932c8b")]
        public string DeviceID
        {
            get { return repo.DeviceID; }
            set { repo.DeviceID = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Wifissid.
        /// </summary>
        [TestVariable("9bfe522f-73aa-4b08-aa4f-8fe951071a0e")]
        public string Wifissid
        {
            get { return repo.Wifissid; }
            set { repo.Wifissid = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.HomeIcon' at Center", repo.ComPentairPentairhome.HomeIconInfo, new RecordItemIndex(0));
            repo.ComPentairPentairhome.HomeIcon.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.SSPCtileClick' at Center", repo.ComPentairPentairhome.SSPCtileClickInfo, new RecordItemIndex(2));
            repo.ComPentairPentairhome.SSPCtileClick.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(3));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.Settingsicon' at Center", repo.ComPentairPentairhome.SettingsiconInfo, new RecordItemIndex(4));
            repo.ComPentairPentairhome.Settingsicon.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(5));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.WiFi' at Center", repo.ComPentairPentairhome.WiFiInfo, new RecordItemIndex(6));
            repo.ComPentairPentairhome.WiFi.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(7));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.ChangeWiFiNetwork' at Center", repo.ComPentairPentairhome.ChangeWiFiNetworkInfo, new RecordItemIndex(8));
            repo.ComPentairPentairhome.ChangeWiFiNetwork.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(9));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.UIWindow.BluetoothContinue' at Center", repo.ComPentairPentairhome.UIWindow.BluetoothContinueInfo, new RecordItemIndex(10));
            repo.ComPentairPentairhome.UIWindow.BluetoothContinue.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(11));
            Delay.Duration(10000, false);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'ComPentairPentairhome.UIWindow.DeviceSelection'", repo.ComPentairPentairhome.UIWindow.DeviceSelectionInfo, new ActionTimeout(30000), new RecordItemIndex(12));
            //repo.ComPentairPentairhome.UIWindow.DeviceSelectionInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.UIWindow.DeviceSelection' at Center", repo.ComPentairPentairhome.UIWindow.DeviceSelectionInfo, new RecordItemIndex(13));
            repo.ComPentairPentairhome.UIWindow.DeviceSelection.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.UIWindow.ConnectionEstablishedContinue' at Center", repo.ComPentairPentairhome.UIWindow.ConnectionEstablishedContinueInfo, new RecordItemIndex(14));
            repo.ComPentairPentairhome.UIWindow.ConnectionEstablishedContinue.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(15));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.UIWindow.WifiSelection' at Center", repo.ComPentairPentairhome.UIWindow.WifiSelectionInfo, new RecordItemIndex(16));
            repo.ComPentairPentairhome.UIWindow.WifiSelection.Touch();
            Delay.Milliseconds(300);
            
            try {
                //Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComPentairPentairhome.UIWindow.WifiSelection' at Center", repo.ComPentairPentairhome.UIWindow.WifiSelectionInfo, new RecordItemIndex(17));
                //repo.ComPentairPentairhome.UIWindow.WifiSelection.Touch();
                //Delay.Milliseconds(300);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(17)); }
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 7s.", new RecordItemIndex(18));
            Delay.Duration(7000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '$WifiPassword' on item 'ComPentairPentairhome.WifiPasswordChaange'.", repo.ComPentairPentairhome.WifiPasswordChaangeInfo, new RecordItemIndex(19));
            repo.ComPentairPentairhome.WifiPasswordChaange.Element.SetAttributeValue("Text", WifiPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(20));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.UIWindow.WifiContinue' at Center", repo.ComPentairPentairhome.UIWindow.WifiContinueInfo, new RecordItemIndex(21));
            repo.ComPentairPentairhome.UIWindow.WifiContinue.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 40s.", new RecordItemIndex(22));
            Delay.Duration(40000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.WiFiUpdateOK' at Center", repo.ComPentairPentairhome.WiFiUpdateOKInfo, new RecordItemIndex(23));
            repo.ComPentairPentairhome.WiFiUpdateOK.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 30s.", new RecordItemIndex(24));
            Delay.Duration(30000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.ComPentairPentairhome.UIWindow.ScreenShot, false, new RecordItemIndex(25));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
